{
  "stats": {
    "suites": 26,
    "tests": 53,
    "passes": 53,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-03T11:00:54.500Z",
    "end": "2018-05-03T11:00:54.587Z",
    "duration": 87,
    "testsRegistered": 53,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "951bb866-b4fd-4a4c-bbab-33cde2ec7354",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [
      {
        "title": "\"before all\" hook",
        "fullTitle": "\"before all\" hook",
        "timedOut": false,
        "duration": 2,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "server.listen(port)",
        "err": {},
        "isRoot": true,
        "uuid": "2b2d8b52-56f8-4b10-8892-54c4328f8394",
        "isHook": true,
        "skipped": false
      }
    ],
    "afterHooks": [
      {
        "title": "\"after all\" hook",
        "fullTitle": "\"after all\" hook",
        "timedOut": false,
        "duration": 0,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "server.close()",
        "err": {},
        "isRoot": true,
        "uuid": "cf6ab27c-c039-47f0-ad24-15f91005f3e3",
        "isHook": true,
        "skipped": false
      }
    ],
    "tests": [
      {
        "title": "integration test of fetching a public resource",
        "fullTitle": "integration test of fetching a public resource",
        "timedOut": false,
        "duration": 15,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/resource/master.css')\nexpect(result.status).to.be.equal(200)\nexpect(result.headers['content-type']).to.be.equal('text/css')\nexpect(result.data.includes('margin: 0')).to.be.equal(true)",
        "err": {},
        "isRoot": true,
        "uuid": "d764fe6e-dbe1-4baf-81d4-7591c99c1e57",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of the rest dispatcher",
        "fullTitle": "integration test of the rest dispatcher",
        "timedOut": false,
        "duration": 6,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result =\n{\n  get     : await request.get('/rest'),\n  post    : await request.post('/rest'),\n  put     : await request.put('/rest'),\n  delete  : await request.delete('/rest'),\n  index   : await request.fetch('index', '/rest')\n}\nexpect(result.get.status).to.be.equal(501)\nexpect(result.post.status).to.be.equal(501)\nexpect(result.put.status).to.be.equal(501)\nexpect(result.delete.status).to.be.equal(501)\nexpect(result.index.status).to.be.equal(400)",
        "err": {},
        "isRoot": true,
        "uuid": "93492a48-4095-4dd4-8e34-9604f0de0061",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a raw text response",
        "fullTitle": "integration test of a raw text response",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-raw')\nexpect(result.status).to.be.equal(200)\nexpect(result.data).to.be.equal('txt')",
        "err": {},
        "isRoot": true,
        "uuid": "825d7354-d46e-46ab-9187-bee57cd78e3b",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a json response",
        "fullTitle": "integration test of a json response",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-json')\nexpect(result.status).to.be.equal(200)\nexpect(result.data.foobar).to.be.equal('bazqux')",
        "err": {},
        "isRoot": true,
        "uuid": "11121d40-3696-4019-9299-833615a42ccd",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a templated response",
        "fullTitle": "integration test of a templated response",
        "timedOut": false,
        "duration": 15,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-templated')\nexpect(result.status).to.be.equal(200)\nexpect(result.data.startsWith('layout')).to.be.equal(true)\nexpect(result.data.includes('titled')).to.be.equal(true)\nexpect(result.data.includes('bazqux')).to.be.equal(true)",
        "err": {},
        "isRoot": true,
        "uuid": "15631f47-bb19-4c47-a705-a4a4205a05d2",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of the if helper",
        "fullTitle": "integration test of the if helper",
        "timedOut": false,
        "duration": 5,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-templated')\n// testing the \"if\" helper in the template\nexpect(result.data.includes('==')).to.be.equal(true)\nexpect(result.data.includes('!=')).to.be.equal(true)\nexpect(result.data.includes('<' )).to.be.equal(true)\nexpect(result.data.includes('<=')).to.be.equal(true)\nexpect(result.data.includes('>' )).to.be.equal(true)\nexpect(result.data.includes('>=')).to.be.equal(true)\nexpect(result.data.includes('&&')).to.be.equal(true)\nexpect(result.data.includes('||')).to.be.equal(true)\nexpect(result.data.includes('typeof')).to.be.equal(true)",
        "err": {},
        "isRoot": true,
        "uuid": "8fc5a7f5-5557-4bf3-9ab2-335eb309e9eb",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a none specified dispatcher should ",
        "fullTitle": "integration test of a none specified dispatcher should ",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-501')\nexpect(result.status).to.be.equal(501)\nexpect(result.data).to.be.equal('Not Implemented')",
        "err": {},
        "isRoot": true,
        "uuid": "897d5ced-62b0-4f65-bf6b-433e44f2d4bc",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a failing dispatcher",
        "fullTitle": "integration test of a failing dispatcher",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-failing')\nexpect(result.status).to.be.equal(500)\nexpect(result.data).to.be.equal('Internal Server Error')",
        "err": {},
        "isRoot": true,
        "uuid": "c31d18d2-a64b-4996-bfdf-345a4c50581a",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a none specified route returns a 404",
        "fullTitle": "integration test of a none specified route returns a 404",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/none-existing-path')\nexpect(result.status).to.be.equal(404)\nexpect(result.data).to.be.equal('Not Found')",
        "err": {},
        "isRoot": true,
        "uuid": "2171424f-7ec0-40f1-9d0e-be9f49b83dfa",
        "isHook": false,
        "skipped": false
      }
    ],
    "suites": [
      {
        "uuid": "568a3b4b-0d6b-4d9e-a248-89ec0a160b47",
        "title": "controller/server/http/router",
        "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/http/router.test.js",
        "file": "/controller/server/http/router.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "e32b62e3-2de5-4f2a-a0ea-eceb7061ea9b",
            "title": "flattenRoutes(routes)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/http/router.test.js",
            "file": "/controller/server/http/router.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a route of the last defined properties",
                "fullTitle": "controller/server/http/router flattenRoutes(routes) should return a route of the last defined properties",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(route.view).to.be.equal('json')\nexpect(route.policy).to.be.equal('/')\nexpect(route.dispatcher).to.be.equal('index')",
                "err": {},
                "isRoot": false,
                "uuid": "b5fdbad4-0c5a-4dd4-9faf-ffced23ba849",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b5fdbad4-0c5a-4dd4-9faf-ffced23ba849"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "533d1754-a4a4-49ca-9ad7-d620b5390021",
            "title": "findRoute(request)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/http/router.test.js",
            "file": "/controller/server/http/router.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "middleware is an array",
                "fullTitle": "controller/server/http/router findRoute(request) middleware is an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.middleware).is.an('array')",
                "err": {},
                "isRoot": false,
                "uuid": "5aceecfa-2d5b-4a55-975d-056d74049bc9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "middleware builds on",
                "fullTitle": "controller/server/http/router findRoute(request) middleware builds on",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.middleware.length).to.be.equal(2)",
                "err": {},
                "isRoot": false,
                "uuid": "1064a264-0ed5-467b-a253-1ec0385136e2",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "middleware routes correctly",
                "fullTitle": "controller/server/http/router findRoute(request) middleware routes correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result2.middleware.length).to.be.equal(1)",
                "err": {},
                "isRoot": false,
                "uuid": "84a540c1-fa9d-41c1-843a-e3be6890f790",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "middleware can be defined as an array",
                "fullTitle": "controller/server/http/router findRoute(request) middleware can be defined as an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result3.middleware.length).to.be.equal(3)",
                "err": {},
                "isRoot": false,
                "uuid": "68c1c1fe-b5bc-4e77-8f66-0cf0d67f95cc",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "view is inherited",
                "fullTitle": "controller/server/http/router findRoute(request) view is inherited",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.view).to.be.equal('json')",
                "err": {},
                "isRoot": false,
                "uuid": "ef62aca1-d5e5-4a90-89ef-418056e67087",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "found correct dispatcher ",
                "fullTitle": "controller/server/http/router findRoute(request) found correct dispatcher ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.dispatcher).to.be.equal('index')",
                "err": {},
                "isRoot": false,
                "uuid": "5343878b-45d4-4659-bafa-a7c521d7821b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "overwrite the view",
                "fullTitle": "controller/server/http/router findRoute(request) overwrite the view",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result2.view).to.be.equal('raw')",
                "err": {},
                "isRoot": false,
                "uuid": "c1eeb223-0838-4dea-bb85-cc7dc593d592",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "first match should have hierarchy",
                "fullTitle": "controller/server/http/router findRoute(request) first match should have hierarchy",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result3.dispatcher).to.be.equal('bar')",
                "err": {},
                "isRoot": false,
                "uuid": "07eaa1be-9d03-4734-b0dd-c022d74de865",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "method policy routes correctly",
                "fullTitle": "controller/server/http/router findRoute(request) method policy routes correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result4.dispatcher).to.be.equal('baz')",
                "err": {},
                "isRoot": false,
                "uuid": "d9a03d9e-3285-49a3-ad10-031197e57ea7",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "no match should return an undefined dispatcher",
                "fullTitle": "controller/server/http/router findRoute(request) no match should return an undefined dispatcher",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result5.dispatcher).to.be.equal(undefined)",
                "err": {},
                "isRoot": false,
                "uuid": "3875d5fa-6b78-4a40-b0a1-3deee1166c53",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "5aceecfa-2d5b-4a55-975d-056d74049bc9",
              "1064a264-0ed5-467b-a253-1ec0385136e2",
              "84a540c1-fa9d-41c1-843a-e3be6890f790",
              "68c1c1fe-b5bc-4e77-8f66-0cf0d67f95cc",
              "ef62aca1-d5e5-4a90-89ef-418056e67087",
              "5343878b-45d4-4659-bafa-a7c521d7821b",
              "c1eeb223-0838-4dea-bb85-cc7dc593d592",
              "07eaa1be-9d03-4734-b0dd-c022d74de865",
              "d9a03d9e-3285-49a3-ad10-031197e57ea7",
              "3875d5fa-6b78-4a40-b0a1-3deee1166c53"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "a4e105d6-f1b1-43c7-b36d-c2902b64e113",
        "title": "controller/server/ws/router",
        "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/ws/router.test.js",
        "file": "/controller/server/ws/router.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "44578d4b-c023-4aaa-8dfc-9edcce26bd00",
            "title": "findRoute(request)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/ws/router.test.js",
            "file": "/controller/server/ws/router.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "correct dispatcher found",
                "fullTitle": "controller/server/ws/router findRoute(request) correct dispatcher found",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.dispatcher).to.be.equal('foo')",
                "err": {},
                "isRoot": false,
                "uuid": "d35b4061-e158-4962-9d7e-605039f8213c",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "regex policy",
                "fullTitle": "controller/server/ws/router findRoute(request) regex policy",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result2.dispatcher).to.be.equal('baz')",
                "err": {},
                "isRoot": false,
                "uuid": "85ba1c53-566f-4eae-9915-50e9433c013f",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "no matching policy should return an undefined dispatcher",
                "fullTitle": "controller/server/ws/router findRoute(request) no matching policy should return an undefined dispatcher",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result3.dispatcher).to.be.equal(undefined)",
                "err": {},
                "isRoot": false,
                "uuid": "816926b8-9197-4c7b-9d37-c34ae3424ed6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d35b4061-e158-4962-9d7e-605039f8213c",
              "85ba1c53-566f-4eae-9915-50e9433c013f",
              "816926b8-9197-4c7b-9d37-c34ae3424ed6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "969ee434-b8ef-4b16-a9e4-d836c3abeb13",
        "title": "error/context",
        "fullFile": "/home/erik/Projects/@superhero/js.core/error/context.test.js",
        "file": "/error/context.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "3332df69-98b4-484f-8d60-7d86838674d3",
            "title": "setCode(code)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/error/context.test.js",
            "file": "/error/context.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to retrieve the error code set through `setCode`",
                "fullTitle": "error/context setCode(code) should be able to retrieve the error code set through `setCode`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const code = 'ERR_VALUE_OUT_OF_RANGE'\nerror.setCode(code)\nexpect(error.code).to.be.equal(code)",
                "err": {},
                "isRoot": false,
                "uuid": "22a80861-1b27-44c5-9bc9-cb284b77f699",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "22a80861-1b27-44c5-9bc9-cb284b77f699"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "62c32d46-01a0-42e8-9bc7-4d218b565195",
            "title": "setContext(ctx)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/error/context.test.js",
            "file": "/error/context.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to retrieve the context set through `setContext`",
                "fullTitle": "error/context setContext(ctx) should be able to retrieve the context set through `setContext`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const ctx = { foo:'bar' }\nerror.setContext(ctx)\nexpect(error.context).to.deep.equal(ctx)",
                "err": {},
                "isRoot": false,
                "uuid": "fa2f476b-80fc-4f9f-8411-2c31dfd0d839",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "fa2f476b-80fc-4f9f-8411-2c31dfd0d839"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b975591f-db03-4db2-8931-50e363844824",
        "title": "error/index",
        "fullFile": "/home/erik/Projects/@superhero/js.core/error/index.test.js",
        "file": "/error/index.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "0a3fb6fd-58ee-4042-850a-5776f2384497",
            "title": "setCode(code)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/error/index.test.js",
            "file": "/error/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to retrieve the error code set through `setCode`",
                "fullTitle": "error/index setCode(code) should be able to retrieve the error code set through `setCode`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const code = 'ERR_VALUE_OUT_OF_RANGE'\nerror.setCode(code)\nexpect(error.code).to.be.equal(code)",
                "err": {},
                "isRoot": false,
                "uuid": "18525eda-1295-4f74-8b5e-25eaf638e21c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "18525eda-1295-4f74-8b5e-25eaf638e21c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "47f65e51-7605-4c0e-94e4-74a1f84a4dd6",
        "title": "view/json",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/json.test.js",
        "file": "/view/json.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "085a5778-038e-4d75-8467-b8420a67ae0c",
            "title": "compose(vm)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/view/json.test.js",
            "file": "/view/json.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a stringified value of `vm.body`",
                "fullTitle": "view/json compose(vm) should return a stringified value of `vm.body`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(json.compose(vm1)).to.be.equal(JSON.stringify(vm1.body))",
                "err": {},
                "isRoot": false,
                "uuid": "c9d9e80e-a77b-48d7-a055-09dc40b71aa9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should set the `vm.headers[\"content-type\"]` to \"application/json\"",
                "fullTitle": "view/json compose(vm) should set the `vm.headers[\"content-type\"]` to \"application/json\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(vm1.headers['content-type']).to.be.equal('application/json')",
                "err": {},
                "isRoot": false,
                "uuid": "11bc06dd-c33e-42f6-b0e3-ed750fc9b347",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "headers set`",
                "fullTitle": "view/json compose(vm) headers set`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(json.compose(vm2)).to.be.equal(JSON.stringify(vm2.body))",
                "err": {},
                "isRoot": false,
                "uuid": "59efde98-2eb2-41e7-a290-91316efc83c9",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "c9d9e80e-a77b-48d7-a055-09dc40b71aa9",
              "11bc06dd-c33e-42f6-b0e3-ed750fc9b347",
              "59efde98-2eb2-41e7-a290-91316efc83c9"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "773a1014-5168-4f33-9525-e2f3bef27e00",
        "title": "view/raw",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/raw.test.js",
        "file": "/view/raw.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "853f2902-caa5-4fd3-93d1-4e8af0e77788",
            "title": "compose(vm)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/view/raw.test.js",
            "file": "/view/raw.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the value of `vm.body`",
                "fullTitle": "view/raw compose(vm) should return the value of `vm.body`",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(raw.compose(vm)).to.be.equal(vm.body)",
                "err": {},
                "isRoot": false,
                "uuid": "1bc6f0d3-fee0-43b7-8287-e4bf79acfdf4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1bc6f0d3-fee0-43b7-8287-e4bf79acfdf4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "50d907ca-fd47-484d-a9aa-2f0200c32fb2",
        "title": "view/template",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template.test.js",
        "file": "/view/template.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "b846b359-b833-45b7-bf9f-a6487a89d571",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core/view/template.test.js",
            "file": "/view/template.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/template static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(Template.handlebars).to.be.equal(require('handlebars'))",
                "err": {},
                "isRoot": false,
                "uuid": "1d7b591d-4f28-45de-8b72-1a12c004dbdc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1d7b591d-4f28-45de-8b72-1a12c004dbdc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "617db25c-ac9b-42bf-adc6-60620b30687c",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/calculate.test.js",
        "file": "/view/template/helper/calculate.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "9c2e6501-fac3-402b-9829-55edb5b6612e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "bd340527-2d88-4ba6-aab2-2bbc8ded804d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "c39d38ee-d6be-4f77-a682-547176604779",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "049f76d8-e86d-46b2-a92d-54bdec9dc540",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "67f47597-351a-4c65-ab0a-19d27c662f88",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "e0237de8-051e-49ef-b249-2d05ac4b5b4b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "9c2e6501-fac3-402b-9829-55edb5b6612e",
          "bd340527-2d88-4ba6-aab2-2bbc8ded804d",
          "c39d38ee-d6be-4f77-a682-547176604779",
          "049f76d8-e86d-46b2-a92d-54bdec9dc540",
          "67f47597-351a-4c65-ab0a-19d27c662f88",
          "e0237de8-051e-49ef-b249-2d05ac4b5b4b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "8001482d-7dcd-4559-b87d-a681bd2d7f34",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/concat.test.js",
        "file": "/view/template/helper/concat.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "b9a243cb-3f13-488c-840e-2537ed9d4c62",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "ab0cd2e5-9091-4482-8fc4-ea7266db3eaf",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b9a243cb-3f13-488c-840e-2537ed9d4c62",
          "ab0cd2e5-9091-4482-8fc4-ea7266db3eaf"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "500e1504-221f-4322-b17d-aa4b5e951cc6",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/dateformat.test.js",
        "file": "/view/template/helper/dateformat.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "0b7d8824-f060-4ec3-beb8-1d696c267442",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0b7d8824-f060-4ec3-beb8-1d696c267442"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4ddf1c82-2409-4cee-8bce-1ac99559bbdc",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/escDoubleQuote.test.js",
        "file": "/view/template/helper/escDoubleQuote.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "ec010536-cacb-4e91-b932-f76b886420ca",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ec010536-cacb-4e91-b932-f76b886420ca"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "12bfb0ea-6833-4a7a-84c8-4a30441163e7",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/escSingelQuote.test.js",
        "file": "/view/template/helper/escSingelQuote.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "cb56f1b8-322a-443a-a71e-66596c33d6e3",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "cb56f1b8-322a-443a-a71e-66596c33d6e3"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3d7ff1ee-ac78-4225-9641-af40db6ec7a3",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/jsonStringify.test.js",
        "file": "/view/template/helper/jsonStringify.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "2bce1feb-02cc-4ae4-8429-071474e90c53",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2bce1feb-02cc-4ae4-8429-071474e90c53"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d9022e5d-50ec-44af-ab4c-35aa60bf3aeb",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/stripTags.test.js",
        "file": "/view/template/helper/stripTags.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "4c87fb4d-42f6-489e-ab21-d9956b0b6678",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "80f0f4af-07f6-4ba7-b20e-c5bb4bb185f1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4c87fb4d-42f6-489e-ab21-d9956b0b6678",
          "80f0f4af-07f6-4ba7-b20e-c5bb4bb185f1"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "dc5c6f5b-3cac-436b-9eab-924d85273545",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/toFixed.test.js",
        "file": "/view/template/helper/toFixed.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "99899edf-a4d3-4c1d-aa19-36597ae3e010",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "32279a1d-2209-4289-9543-5ac96e4f114c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "0e206535-26cc-46bc-a90f-3f198012a5d2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "009ac709-e1b8-4051-8fca-9c333baeb8f3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "1ea08e5a-8c53-4768-a68f-b39f5c078d84",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "d012fc56-1558-4e9f-b41e-4f39a64ec3fb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "99899edf-a4d3-4c1d-aa19-36597ae3e010",
          "32279a1d-2209-4289-9543-5ac96e4f114c",
          "0e206535-26cc-46bc-a90f-3f198012a5d2",
          "009ac709-e1b8-4051-8fca-9c333baeb8f3",
          "1ea08e5a-8c53-4768-a68f-b39f5c078d84",
          "d012fc56-1558-4e9f-b41e-4f39a64ec3fb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4deee49b-38d7-4309-bc01-0f54289f543f",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/toLowerCase.test.js",
        "file": "/view/template/helper/toLowerCase.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "6cd213af-4429-4b45-b1e2-5afffe2f1528",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6cd213af-4429-4b45-b1e2-5afffe2f1528"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1f359053-16b0-4dd8-85ce-db0eb95a657b",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/toUpperCase.test.js",
        "file": "/view/template/helper/toUpperCase.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "884236c7-95bb-4aeb-b234-daddbf6650df",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "884236c7-95bb-4aeb-b234-daddbf6650df"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [
      "d764fe6e-dbe1-4baf-81d4-7591c99c1e57",
      "93492a48-4095-4dd4-8e34-9604f0de0061",
      "825d7354-d46e-46ab-9187-bee57cd78e3b",
      "11121d40-3696-4019-9299-833615a42ccd",
      "15631f47-bb19-4c47-a705-a4a4205a05d2",
      "8fc5a7f5-5557-4bf3-9ab2-335eb309e9eb",
      "897d5ced-62b0-4f65-bf6b-433e44f2d4bc",
      "c31d18d2-a64b-4996-bfdf-345a4c50581a",
      "2171424f-7ec0-40f1-9d0e-be9f49b83dfa"
    ],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 46,
    "root": true,
    "rootEmpty": false,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}