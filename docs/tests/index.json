{
  "stats": {
    "suites": 26,
    "tests": 53,
    "passes": 53,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-03T10:34:27.352Z",
    "end": "2018-05-03T10:34:27.443Z",
    "duration": 91,
    "testsRegistered": 53,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "0f1e49ca-a198-4abe-a1dc-25ff32bab634",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [
      {
        "title": "\"before all\" hook",
        "fullTitle": "\"before all\" hook",
        "timedOut": false,
        "duration": 2,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "server.listen(port)",
        "err": {},
        "isRoot": true,
        "uuid": "e3115f0e-f316-4e61-97c0-c932df5ba8f8",
        "isHook": true,
        "skipped": false
      }
    ],
    "afterHooks": [
      {
        "title": "\"after all\" hook",
        "fullTitle": "\"after all\" hook",
        "timedOut": false,
        "duration": 0,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "server.close()",
        "err": {},
        "isRoot": true,
        "uuid": "871b9351-59a3-419c-8600-c5eefe9852db",
        "isHook": true,
        "skipped": false
      }
    ],
    "tests": [
      {
        "title": "integration test of fetching a public resource",
        "fullTitle": "integration test of fetching a public resource",
        "timedOut": false,
        "duration": 16,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/resource/master.css')\nexpect(result.status).to.be.equal(200)\nexpect(result.headers['content-type']).to.be.equal('text/css')\nexpect(result.data.includes('margin: 0')).to.be.equal(true)",
        "err": {},
        "isRoot": true,
        "uuid": "36225704-a479-4d99-a709-3684b381c8a1",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of the rest dispatcher",
        "fullTitle": "integration test of the rest dispatcher",
        "timedOut": false,
        "duration": 7,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result =\n{\n  get     : await request.get('/rest'),\n  post    : await request.post('/rest'),\n  put     : await request.put('/rest'),\n  delete  : await request.delete('/rest'),\n  index   : await request.fetch('index', '/rest')\n}\nexpect(result.get.status).to.be.equal(501)\nexpect(result.post.status).to.be.equal(501)\nexpect(result.put.status).to.be.equal(501)\nexpect(result.delete.status).to.be.equal(501)\nexpect(result.index.status).to.be.equal(400)",
        "err": {},
        "isRoot": true,
        "uuid": "ccb8f665-63b5-45af-b301-bfb81be51363",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a raw text response",
        "fullTitle": "integration test of a raw text response",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-raw')\nexpect(result.status).to.be.equal(200)\nexpect(result.data).to.be.equal('txt')",
        "err": {},
        "isRoot": true,
        "uuid": "b768ce92-1a49-4650-aa71-c8690a123491",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a json response",
        "fullTitle": "integration test of a json response",
        "timedOut": false,
        "duration": 2,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-json')\nexpect(result.status).to.be.equal(200)\nexpect(result.data.foobar).to.be.equal('bazqux')",
        "err": {},
        "isRoot": true,
        "uuid": "11cbf4dc-af4f-4b05-9f1c-2d04e458dc5d",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a templated response",
        "fullTitle": "integration test of a templated response",
        "timedOut": false,
        "duration": 16,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-templated')\nexpect(result.status).to.be.equal(200)\nexpect(result.data.startsWith('layout')).to.be.equal(true)\nexpect(result.data.includes('titled')).to.be.equal(true)\nexpect(result.data.includes('bazqux')).to.be.equal(true)",
        "err": {},
        "isRoot": true,
        "uuid": "8feea4e3-4b5b-42ed-bf5f-0253f366edd5",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of the if helper",
        "fullTitle": "integration test of the if helper",
        "timedOut": false,
        "duration": 6,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-templated')\n// testing the \"if\" helper in the template\nexpect(result.data.includes('==')).to.be.equal(true)\nexpect(result.data.includes('!=')).to.be.equal(true)\nexpect(result.data.includes('<' )).to.be.equal(true)\nexpect(result.data.includes('<=')).to.be.equal(true)\nexpect(result.data.includes('>' )).to.be.equal(true)\nexpect(result.data.includes('>=')).to.be.equal(true)\nexpect(result.data.includes('&&')).to.be.equal(true)\nexpect(result.data.includes('||')).to.be.equal(true)\nexpect(result.data.includes('typeof')).to.be.equal(true)",
        "err": {},
        "isRoot": true,
        "uuid": "44045d97-7662-4a7d-9e19-f4fe243d3695",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a none specified dispatcher should ",
        "fullTitle": "integration test of a none specified dispatcher should ",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-501')\nexpect(result.status).to.be.equal(501)\nexpect(result.data).to.be.equal('Not Implemented')",
        "err": {},
        "isRoot": true,
        "uuid": "e52710be-a591-4155-838a-33045b053554",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a failing dispatcher",
        "fullTitle": "integration test of a failing dispatcher",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/test-failing')\nexpect(result.status).to.be.equal(500)\nexpect(result.data).to.be.equal('Internal Server Error')",
        "err": {},
        "isRoot": true,
        "uuid": "64aad663-1294-49dd-9889-3dd8a5653707",
        "isHook": false,
        "skipped": false
      },
      {
        "title": "integration test of a none specified route returns a 404",
        "fullTitle": "integration test of a none specified route returns a 404",
        "timedOut": false,
        "duration": 1,
        "state": "passed",
        "speed": "fast",
        "pass": true,
        "fail": false,
        "pending": false,
        "code": "const result = await request.get('/none-existing-path')\nexpect(result.status).to.be.equal(404)\nexpect(result.data).to.be.equal('Not Found')",
        "err": {},
        "isRoot": true,
        "uuid": "18582e12-bc83-469c-908f-e2f4eaf47059",
        "isHook": false,
        "skipped": false
      }
    ],
    "suites": [
      {
        "uuid": "cc6f6e2a-0ae7-4626-b337-9256ad796c98",
        "title": "controller/server/http/router",
        "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/http/router.test.js",
        "file": "/controller/server/http/router.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "eca785ab-b3cb-41c2-a5e5-50f6a9b1901f",
            "title": "flattenRoutes(routes)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/http/router.test.js",
            "file": "/controller/server/http/router.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a route of the last defined properties",
                "fullTitle": "controller/server/http/router flattenRoutes(routes) should return a route of the last defined properties",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(route.view).to.be.equal('json')\nexpect(route.policy).to.be.equal('/')\nexpect(route.dispatcher).to.be.equal('index')",
                "err": {},
                "isRoot": false,
                "uuid": "9817de50-f7f7-4542-883a-cadd95ce8dac",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9817de50-f7f7-4542-883a-cadd95ce8dac"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "76504c2e-e96c-4cfb-86d1-f0019bdcb552",
            "title": "findRoute(request)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/http/router.test.js",
            "file": "/controller/server/http/router.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "middleware is an array",
                "fullTitle": "controller/server/http/router findRoute(request) middleware is an array",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.middleware).is.an('array')",
                "err": {},
                "isRoot": false,
                "uuid": "97837135-90fe-4d3b-ad64-28b79a43d0d3",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "middleware builds on",
                "fullTitle": "controller/server/http/router findRoute(request) middleware builds on",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.middleware.length).to.be.equal(2)",
                "err": {},
                "isRoot": false,
                "uuid": "a501b463-0c74-4973-80fb-ee83b07d8647",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "middleware routes correctly",
                "fullTitle": "controller/server/http/router findRoute(request) middleware routes correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result2.middleware.length).to.be.equal(1)",
                "err": {},
                "isRoot": false,
                "uuid": "5de4a8a3-214d-4bc7-836a-fce9c0159542",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "middleware can be defined as an array",
                "fullTitle": "controller/server/http/router findRoute(request) middleware can be defined as an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result3.middleware.length).to.be.equal(3)",
                "err": {},
                "isRoot": false,
                "uuid": "da52a7b8-1d66-4741-830b-24cacfbbeddf",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "view is inherited",
                "fullTitle": "controller/server/http/router findRoute(request) view is inherited",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.view).to.be.equal('json')",
                "err": {},
                "isRoot": false,
                "uuid": "405749b8-6328-4850-b650-1805617bc653",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "found correct dispatcher ",
                "fullTitle": "controller/server/http/router findRoute(request) found correct dispatcher ",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.dispatcher).to.be.equal('index')",
                "err": {},
                "isRoot": false,
                "uuid": "ba903a85-2b9d-4c81-8537-ffa4cf456874",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "overwrite the view",
                "fullTitle": "controller/server/http/router findRoute(request) overwrite the view",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result2.view).to.be.equal('raw')",
                "err": {},
                "isRoot": false,
                "uuid": "a52a9b32-8d2f-4871-a855-49ed82dbb238",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "first match should have hierarchy",
                "fullTitle": "controller/server/http/router findRoute(request) first match should have hierarchy",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result3.dispatcher).to.be.equal('bar')",
                "err": {},
                "isRoot": false,
                "uuid": "eb8b065f-88df-4c2f-8896-6026a9953796",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "method policy routes correctly",
                "fullTitle": "controller/server/http/router findRoute(request) method policy routes correctly",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result4.dispatcher).to.be.equal('baz')",
                "err": {},
                "isRoot": false,
                "uuid": "188db098-643b-487b-b273-5eeb028e6aae",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "no match should return an undefined dispatcher",
                "fullTitle": "controller/server/http/router findRoute(request) no match should return an undefined dispatcher",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result5.dispatcher).to.be.equal(undefined)",
                "err": {},
                "isRoot": false,
                "uuid": "227bd56a-8eb1-4076-8593-1ead1bc914d1",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "97837135-90fe-4d3b-ad64-28b79a43d0d3",
              "a501b463-0c74-4973-80fb-ee83b07d8647",
              "5de4a8a3-214d-4bc7-836a-fce9c0159542",
              "da52a7b8-1d66-4741-830b-24cacfbbeddf",
              "405749b8-6328-4850-b650-1805617bc653",
              "ba903a85-2b9d-4c81-8537-ffa4cf456874",
              "a52a9b32-8d2f-4871-a855-49ed82dbb238",
              "eb8b065f-88df-4c2f-8896-6026a9953796",
              "188db098-643b-487b-b273-5eeb028e6aae",
              "227bd56a-8eb1-4076-8593-1ead1bc914d1"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "962f12f2-3fad-44b9-9039-f22824314d2a",
        "title": "controller/server/ws/router",
        "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/ws/router.test.js",
        "file": "/controller/server/ws/router.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "e76831be-def9-4569-8200-d08a34c20d21",
            "title": "findRoute(request)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/controller/server/ws/router.test.js",
            "file": "/controller/server/ws/router.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "correct dispatcher found",
                "fullTitle": "controller/server/ws/router findRoute(request) correct dispatcher found",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result1.dispatcher).to.be.equal('foo')",
                "err": {},
                "isRoot": false,
                "uuid": "2f63fdad-b3eb-4ff5-905c-00bcedec1a82",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "regex policy",
                "fullTitle": "controller/server/ws/router findRoute(request) regex policy",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result2.dispatcher).to.be.equal('baz')",
                "err": {},
                "isRoot": false,
                "uuid": "03dfc20d-5891-49fc-b53b-7a1b94d40597",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "no matching policy should return an undefined dispatcher",
                "fullTitle": "controller/server/ws/router findRoute(request) no matching policy should return an undefined dispatcher",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(result3.dispatcher).to.be.equal(undefined)",
                "err": {},
                "isRoot": false,
                "uuid": "60ae21fe-15ee-49cc-8421-be1e3ad5c90f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "2f63fdad-b3eb-4ff5-905c-00bcedec1a82",
              "03dfc20d-5891-49fc-b53b-7a1b94d40597",
              "60ae21fe-15ee-49cc-8421-be1e3ad5c90f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "6f66111b-5cb2-49f6-9ace-6f2caf8e9394",
        "title": "error/context",
        "fullFile": "/home/erik/Projects/@superhero/js.core/error/context.test.js",
        "file": "/error/context.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "9ac0d00a-db4d-41a0-ab4e-8281e4fb7d58",
            "title": "setCode(code)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/error/context.test.js",
            "file": "/error/context.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to retrieve the error code set through `setCode`",
                "fullTitle": "error/context setCode(code) should be able to retrieve the error code set through `setCode`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const code = 'ERR_VALUE_OUT_OF_RANGE'\nerror.setCode(code)\nexpect(error.code).to.be.equal(code)",
                "err": {},
                "isRoot": false,
                "uuid": "6a660c6a-7d9f-46a4-8629-5b82cea58589",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6a660c6a-7d9f-46a4-8629-5b82cea58589"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "970be31a-cb21-4bb9-937d-50611118a44f",
            "title": "setContext(ctx)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/error/context.test.js",
            "file": "/error/context.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to retrieve the context set through `setContext`",
                "fullTitle": "error/context setContext(ctx) should be able to retrieve the context set through `setContext`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const ctx = { foo:'bar' }\nerror.setContext(ctx)\nexpect(error.context).to.deep.equal(ctx)",
                "err": {},
                "isRoot": false,
                "uuid": "4ebfb2fa-b391-45cd-8244-b257d22276e6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4ebfb2fa-b391-45cd-8244-b257d22276e6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b7bb4e63-bea3-41aa-8f77-9b0aeb8fe1de",
        "title": "error/index",
        "fullFile": "/home/erik/Projects/@superhero/js.core/error/index.test.js",
        "file": "/error/index.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "e69966aa-483e-461b-bbb1-954a58e666b4",
            "title": "setCode(code)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/error/index.test.js",
            "file": "/error/index.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should be able to retrieve the error code set through `setCode`",
                "fullTitle": "error/index setCode(code) should be able to retrieve the error code set through `setCode`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const code = 'ERR_VALUE_OUT_OF_RANGE'\nerror.setCode(code)\nexpect(error.code).to.be.equal(code)",
                "err": {},
                "isRoot": false,
                "uuid": "1fdd6bf2-eb74-48d0-934a-00f1c08ef785",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1fdd6bf2-eb74-48d0-934a-00f1c08ef785"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "42cb53cc-f7ef-4c86-9cd7-6d831f167371",
        "title": "view/json",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/json.test.js",
        "file": "/view/json.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "7d0cf4ab-3103-46fa-a15b-5e955d94735c",
            "title": "compose(vm)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/view/json.test.js",
            "file": "/view/json.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return a stringified value of `vm.body`",
                "fullTitle": "view/json compose(vm) should return a stringified value of `vm.body`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(json.compose(vm1)).to.be.equal(JSON.stringify(vm1.body))",
                "err": {},
                "isRoot": false,
                "uuid": "62378f11-6f92-4cf7-85af-a74833694800",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should set the `vm.headers[\"content-type\"]` to \"application/json\"",
                "fullTitle": "view/json compose(vm) should set the `vm.headers[\"content-type\"]` to \"application/json\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(vm1.headers['content-type']).to.be.equal('application/json')",
                "err": {},
                "isRoot": false,
                "uuid": "647f6c08-441b-493a-a658-6615a2deeb92",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "headers set`",
                "fullTitle": "view/json compose(vm) headers set`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(json.compose(vm2)).to.be.equal(JSON.stringify(vm2.body))",
                "err": {},
                "isRoot": false,
                "uuid": "4b6c5929-848e-48e7-ab3f-12cf91d9ebe6",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "62378f11-6f92-4cf7-85af-a74833694800",
              "647f6c08-441b-493a-a658-6615a2deeb92",
              "4b6c5929-848e-48e7-ab3f-12cf91d9ebe6"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "10892300-3b05-43b9-b118-db1d3a0a96a2",
        "title": "view/raw",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/raw.test.js",
        "file": "/view/raw.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "d0468655-fa95-43f4-96e6-0ac2fcd98242",
            "title": "compose(vm)",
            "fullFile": "/home/erik/Projects/@superhero/js.core/view/raw.test.js",
            "file": "/view/raw.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the value of `vm.body`",
                "fullTitle": "view/raw compose(vm) should return the value of `vm.body`",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(raw.compose(vm)).to.be.equal(vm.body)",
                "err": {},
                "isRoot": false,
                "uuid": "4fa1e400-cd88-4a9b-815f-6200e83deaff",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4fa1e400-cd88-4a9b-815f-6200e83deaff"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "7c1f3825-f46b-4887-9bef-e2e1fa949b5a",
        "title": "view/template",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template.test.js",
        "file": "/view/template.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "86e2e84c-ba83-4df5-bb6f-03184a2d7bdc",
            "title": "static get handlebars",
            "fullFile": "/home/erik/Projects/@superhero/js.core/view/template.test.js",
            "file": "/view/template.test.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should return the handlebars instance",
                "fullTitle": "view/template static get handlebars should return the handlebars instance",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(Template.handlebars).to.be.equal(require('handlebars'))",
                "err": {},
                "isRoot": false,
                "uuid": "7ea17085-9a02-4a1c-b94b-24a9f7b8fd8c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "7ea17085-9a02-4a1c-b94b-24a9f7b8fd8c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "568ac1a0-b547-4b45-9f1b-4108b09659ad",
        "title": "view/template/helper/calculate",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/calculate.test.js",
        "file": "/view/template/helper/calculate.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "1 + 1 = 2",
            "fullTitle": "view/template/helper/calculate 1 + 1 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '+', 1)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "4972f8dd-0c77-48eb-a9fe-b6b1819d3c73",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "4 - 2 = 2",
            "fullTitle": "view/template/helper/calculate 4 - 2 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(4, '-', 2)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "0f2a71d3-5bca-4480-b540-655b122ac47f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "3 * 3 = 9",
            "fullTitle": "view/template/helper/calculate 3 * 3 = 9",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(3, '*', 3)).to.be.equal(9)",
            "err": {},
            "isRoot": false,
            "uuid": "30b3da96-6535-489d-9c9d-ddb96151dfe9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "9 / 3 = 3",
            "fullTitle": "view/template/helper/calculate 9 / 3 = 3",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(9, '/', 3)).to.be.equal(3)",
            "err": {},
            "isRoot": false,
            "uuid": "9a52132d-0596-4fc2-b5b6-72581b9747e9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "5 % 3 = 2",
            "fullTitle": "view/template/helper/calculate 5 % 3 = 2",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(5, '%', 3)).to.be.equal(2)",
            "err": {},
            "isRoot": false,
            "uuid": "6acade37-6220-4dc5-8144-37ab4d1c6ed3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "empty operator should return an empty string",
            "fullTitle": "view/template/helper/calculate empty operator should return an empty string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(calculate(1, '', 1)).to.be.equal('')",
            "err": {},
            "isRoot": false,
            "uuid": "914ddea0-f120-4117-ab6e-07c6161765f7",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4972f8dd-0c77-48eb-a9fe-b6b1819d3c73",
          "0f2a71d3-5bca-4480-b540-655b122ac47f",
          "30b3da96-6535-489d-9c9d-ddb96151dfe9",
          "9a52132d-0596-4fc2-b5b6-72581b9747e9",
          "6acade37-6220-4dc5-8144-37ab4d1c6ed3",
          "914ddea0-f120-4117-ab6e-07c6161765f7"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3445dd6e-a79d-450c-9c56-3430f95aa385",
        "title": "view/template/helper/concat",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/concat.test.js",
        "file": "/view/template/helper/concat.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a concatted string",
            "fullTitle": "view/template/helper/concat should return a concatted string",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo','bar','baz')).to.be.equal('foobarbaz')",
            "err": {},
            "isRoot": false,
            "uuid": "7eb57ee9-8ce7-4e01-a090-c80f0dedf046",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should ignore objects or undefined arguments when concatting",
            "fullTitle": "view/template/helper/concat should ignore objects or undefined arguments when concatting",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(concat('foo', undefined, {}, 'bar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "89c12adb-e2d5-46ff-a383-068c65443217",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7eb57ee9-8ce7-4e01-a090-c80f0dedf046",
          "89c12adb-e2d5-46ff-a383-068c65443217"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "b3a910ad-d5e2-4d79-a01f-066182719e83",
        "title": "view/template/helper/dateformat",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/dateformat.test.js",
        "file": "/view/template/helper/dateformat.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a formated date string",
            "fullTitle": "view/template/helper/dateformat should return a formated date string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(dateformat(new Date(1524493378898), 'yyyy')).to.be.equal('2018')",
            "err": {},
            "isRoot": false,
            "uuid": "065ac6b4-b5fb-4d13-9350-99c461f6b255",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "065ac6b4-b5fb-4d13-9350-99c461f6b255"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "fe1aed58-dc0c-4e32-94cc-e1c76a6344dd",
        "title": "view/template/helper/escDoubleQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/escDoubleQuote.test.js",
        "file": "/view/template/helper/escDoubleQuote.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped double quotes",
            "fullTitle": "view/template/helper/escDoubleQuote should return a string with escaped double quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escDoubleQuote('foo \"bar\"')).to.be.equal('foo \\\\\"bar\\\\\"')",
            "err": {},
            "isRoot": false,
            "uuid": "eb15d6ff-a79a-458e-be95-a366132d442c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "eb15d6ff-a79a-458e-be95-a366132d442c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f0d78dc2-1760-4791-a61b-973026876e21",
        "title": "view/template/helper/escSingelQuote",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/escSingelQuote.test.js",
        "file": "/view/template/helper/escSingelQuote.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string with escaped singel quotes",
            "fullTitle": "view/template/helper/escSingelQuote should return a string with escaped singel quotes",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(escSingelQuote(\"foo 'bar'\")).to.be.equal(\"foo \\\\'bar\\\\'\")",
            "err": {},
            "isRoot": false,
            "uuid": "e8f84d40-4994-435d-9e0f-93d036252446",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e8f84d40-4994-435d-9e0f-93d036252446"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "d1ec97d1-1335-4fe7-b183-864fb4be372d",
        "title": "view/template/helper/jsonStringify",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/jsonStringify.test.js",
        "file": "/view/template/helper/jsonStringify.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a stringified json object",
            "fullTitle": "view/template/helper/jsonStringify should return a stringified json object",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(jsonStringify({foo:'bar'})).to.be.equal('{\"foo\":\"bar\"}')",
            "err": {},
            "isRoot": false,
            "uuid": "da625d94-ee40-482e-baee-5ba29b86affa",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "da625d94-ee40-482e-baee-5ba29b86affa"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "76c967e2-10a1-4d7c-9adf-8ad75ff27d51",
        "title": "view/template/helper/stripTags",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/stripTags.test.js",
        "file": "/view/template/helper/stripTags.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a string stripped of html tags",
            "fullTitle": "view/template/helper/stripTags should return a string stripped of html tags",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags('<p>foobar</p>')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "70352560-9cbd-4ba7-a65a-6566d3ab2d86",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return a number if a number was given",
            "fullTitle": "view/template/helper/stripTags should return a number if a number was given",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(stripTags(5)).to.be.equal(5)",
            "err": {},
            "isRoot": false,
            "uuid": "64085049-6d9a-4560-8e7e-914b21ff0dc1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "70352560-9cbd-4ba7-a65a-6566d3ab2d86",
          "64085049-6d9a-4560-8e7e-914b21ff0dc1"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "bf033e8a-dd5b-4b12-a3a2-3c38a32b6c3a",
        "title": "view/template/helper/toFixed",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/toFixed.test.js",
        "file": "/view/template/helper/toFixed.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return a padded number",
            "fullTitle": "view/template/helper/toFixed should return a padded number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(5, 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "074820cb-18e0-46cd-ae57-5fdac0a467e7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle \"null\"",
            "fullTitle": "view/template/helper/toFixed should be able to handle \"null\"",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(null, 2)).to.be.equal('0.00')",
            "err": {},
            "isRoot": false,
            "uuid": "c8989f29-5d22-4eaa-a415-112875e0d431",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should return NaN if \"undefined\" is spcified",
            "fullTitle": "view/template/helper/toFixed should return NaN if \"undefined\" is spcified",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(undefined, 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "eb9cc97b-69c7-4cc5-86c6-cda6238b318b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle negative numbers",
            "fullTitle": "view/template/helper/toFixed should be able to handle negative numbers",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed(-5, 2)).to.be.equal('-5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "0a2158ff-3a77-4e56-95ca-3b9efe032678",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('5', 2)).to.be.equal('5.00')",
            "err": {},
            "isRoot": false,
            "uuid": "6231683c-2943-41d4-853c-91bea22d1f39",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should be able to handle strings that is not formatted as a number",
            "fullTitle": "view/template/helper/toFixed should be able to handle strings that is not formatted as a number",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toFixed('foobar', 2)).to.be.equal('NaN')",
            "err": {},
            "isRoot": false,
            "uuid": "f599a6ca-e806-4591-8b24-505c8386b7bd",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "074820cb-18e0-46cd-ae57-5fdac0a467e7",
          "c8989f29-5d22-4eaa-a415-112875e0d431",
          "eb9cc97b-69c7-4cc5-86c6-cda6238b318b",
          "0a2158ff-3a77-4e56-95ca-3b9efe032678",
          "6231683c-2943-41d4-853c-91bea22d1f39",
          "f599a6ca-e806-4591-8b24-505c8386b7bd"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f92cf135-2546-40ac-b001-6140246e540a",
        "title": "view/template/helper/toLowerCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/toLowerCase.test.js",
        "file": "/view/template/helper/toLowerCase.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toLowerCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toLowerCase('FooBar')).to.be.equal('foobar')",
            "err": {},
            "isRoot": false,
            "uuid": "067743ab-cc42-41dd-81c0-3b7c509f8038",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "067743ab-cc42-41dd-81c0-3b7c509f8038"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "99971b96-7fce-4075-be88-d2994465a52c",
        "title": "view/template/helper/toUpperCase",
        "fullFile": "/home/erik/Projects/@superhero/js.core/view/template/helper/toUpperCase.test.js",
        "file": "/view/template/helper/toUpperCase.test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should return an uppercase string",
            "fullTitle": "view/template/helper/toUpperCase should return an uppercase string",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(toUpperCase('Foobar')).to.be.equal('FOOBAR')",
            "err": {},
            "isRoot": false,
            "uuid": "ae8b6ab5-e057-4f67-9cf2-1b84dfb41011",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ae8b6ab5-e057-4f67-9cf2-1b84dfb41011"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [
      "36225704-a479-4d99-a709-3684b381c8a1",
      "ccb8f665-63b5-45af-b301-bfb81be51363",
      "b768ce92-1a49-4650-aa71-c8690a123491",
      "11cbf4dc-af4f-4b05-9f1c-2d04e458dc5d",
      "8feea4e3-4b5b-42ed-bf5f-0253f366edd5",
      "44045d97-7662-4a7d-9e19-f4fe243d3695",
      "e52710be-a591-4155-838a-33045b053554",
      "64aad663-1294-49dd-9889-3dd8a5653707",
      "18582e12-bc83-469c-908f-e2f4eaf47059"
    ],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 51,
    "root": true,
    "rootEmpty": false,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}